name: Build Hessflix

on:
  push:
    tags:
      - "v*"
    branches:
      - master
  pull_request:
    paths:
      - pubspec.yaml
      - .github/workflows/build.yml
      - .fvmrc
    types:
      - opened
      - reopened
  workflow_dispatch:

jobs:
  fetch-info:
    runs-on: ubuntu-latest
    outputs:
      version_name: ${{ steps.fetch.outputs.version_name }}
      flutter_version: ${{ steps.fetch.outputs.flutter_version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Fetch version name
        id: fetch
        run: |
          # Extract version_name from pubspec.yaml
          VERSION_NAME=$(grep '^version:' pubspec.yaml | cut -d ':' -f2 | cut -d '+' -f1 | tr -d ' ')
          echo "version_name=${VERSION_NAME}" >> "$GITHUB_OUTPUT"

          # Extract flutter_version from .fvmrc
          FLUTTER_VERSION=$(jq -r '.flutter' .fvmrc)
          echo "flutter_version=${FLUTTER_VERSION}" >> "$GITHUB_OUTPUT"
        shell: bash

  build-android:
    needs: [fetch-info]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Determine Build Type
        run: |
          if [[ "${{ startsWith(github.ref, 'refs/tags/v') }}" == "true" ]]; then
            echo "BUILD_MODE=release" >> $GITHUB_ENV
            echo "ARTIFACT_SUFFIX=release-signed" >> $GITHUB_ENV
            echo "AAB_PATH=productionRelease" >> $GITHUB_ENV
          else
            echo "BUILD_MODE=profile" >> $GITHUB_ENV
            echo "ARTIFACT_SUFFIX=production" >> $GITHUB_ENV
            echo "AAB_PATH=productionProfile" >> $GITHUB_ENV
          fi

      - name: Decode Keystore for release
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          ENCODED_STRING: ${{ secrets.KEYSTORE_BASE_64 }}
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
        run: |
          echo "$ENCODED_STRING" | base64 -d > android/app/keystore.jks

          # Create the key.properties file
          cat > android/app/key.properties <<EOF
          storePassword=$RELEASE_KEYSTORE_PASSWORD
          keyPassword=$RELEASE_KEY_PASSWORD
          keyAlias=$RELEASE_KEYSTORE_ALIAS
          EOF

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"
          cache: "gradle"
          check-latest: true

      - name: Set up Flutter
        uses: subosito/flutter-action@v2.16.0
        with:
          channel: "stable"
          flutter-version: ${{needs.fetch-info.outputs.flutter-version}}
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"

      - name: Get dependencies
        run: flutter pub get

      - name: Build Android APK and AAB
        run: |
          flutter build apk --${{ env.BUILD_MODE }} --build-number=${{github.run_number}} --flavor production
          flutter build appbundle --${{ env.BUILD_MODE }} --build-number=${{github.run_number}} --flavor production

      - name: Rename APK and AAB
        run: |
          mkdir -p build/app/outputs/android_artifacts
          mv build/app/outputs/flutter-apk/app-production-${{ env.BUILD_MODE }}.apk "build/app/outputs/android_artifacts/${{ env.ARTIFACT_SUFFIX }}.apk"
          mv build/app/outputs/bundle/${{ env.AAB_PATH }}/app-production-${{ env.BUILD_MODE }}.aab "build/app/outputs/android_artifacts/${{ env.ARTIFACT_SUFFIX }}.aab"

      - name: Archive Android artifacts
        uses: actions/upload-artifact@v4.0.0
        with:
          name: hessflix-android
          path: build/app/outputs/android_artifacts/

  build-windows:
    runs-on: windows-latest
    needs: [fetch-info]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Set up Flutter
        uses: subosito/flutter-action@v2.16.0
        with:
          channel: "stable"
          flutter-version: ${{needs.fetch-info.outputs.flutter-version}}
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"

      - name: Get dependencies
        run: flutter pub get

      - name: Build Windows EXE
        run: flutter build windows --build-number=${{ github.run_number }}

      - name: Compile Inno Setup installer
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
        with:
          path: windows/windows_setup.iss
          options: /O+
        env:
          HESSFLIX_VERSION: ${{needs.fetch-info.outputs.version_name}}

      - name: Archive Windows portable artifact
        uses: actions/upload-artifact@v4.0.0
        with:
          name: hessflix-windows-portable
          path: build\windows\x64\runner\Release\

      - name: Archive Windows installer artifact
        uses: actions/upload-artifact@v4.0.0
        with:
          name: hessflix-windows-installer
          path: windows\Output\hessflix_setup.exe

  build-ios:
    runs-on: macos-latest
    needs: [fetch-info]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Set up Flutter
        uses: subosito/flutter-action@v2.16.0
        with:
          channel: "stable"
          flutter-version: ${{needs.fetch-info.outputs.flutter-version}}
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"

      - name: Get dependencies
        run: flutter pub get

      - name: Build iOS app
        run: flutter build ipa --no-codesign --flavor production --build-number=${{ github.run_number }}

      - name: Create unsigned IPA
        run: |
          cd build/ios/archive/Runner.xcarchive/Products/Applications/
          mkdir Payload
          mv Runner.app Payload/
          zip -r iOS.ipa Payload

      - name: Archive iOS IPA artifact
        uses: actions/upload-artifact@v4.0.0
        with:
          name: hessflix-iOS
          path: build/ios/archive/Runner.xcarchive/Products/Applications/iOS.ipa

  build-macos:
    runs-on: macos-latest
    needs: [fetch-info]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Set up Flutter
        uses: subosito/flutter-action@v2.16.0
        with:
          channel: "stable"
          flutter-version: ${{needs.fetch-info.outputs.flutter-version}}
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"

      - name: Get dependencies
        run: flutter pub get

      - name: Build macOS app
        run: flutter build macos --flavor production --build-number=${{ github.run_number }}

      - name: Create DMG file
        run: hdiutil create -format UDZO -srcfolder build/macos/Build/Products/Release-production/hessflix.app build/macos/Build/Products/Release-production/macOS.dmg

      - name: Archive macOS artifact
        uses: actions/upload-artifact@v4.0.0
        with:
          name: hessflix-macOS
          path: build/macos/Build/Products/Release-production/macOS.dmg

  build-linux:
    runs-on: ubuntu-latest
    needs: [fetch-info]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Set up Flutter
        uses: subosito/flutter-action@v2.16.0
        with:
          channel: "stable"
          flutter-version: ${{needs.fetch-info.outputs.flutter-version}}
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"

      - name: Update build number in pubspec.yaml
        run: |
          sed -i -E 's/(version: [0-9]+\.[0-9]+\.[0-9]+\+)[0-9]+/\1${{ github.run_number }}/' pubspec.yaml

      - name: Get dependencies
        run: flutter pub get

      - name: Get packages
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev libmpv-dev patchelf cmake clang libfuse2

      - name: Build Linux app
        run: flutter build linux --release --build-number=${{ github.run_number }}

      - name: Fix RPATH
        run: |
          for lib in "build/linux/x64/release/bundle/lib"/*.so; do
            [[ -f "$lib" && -n "$(patchelf --print-rpath "$lib")" ]] && \
            patchelf --set-rpath '$ORIGIN' "$lib"
          done
          patchelf --set-rpath '$ORIGIN/lib' "build/linux/x64/release/bundle/Hessflix"

      - name: Archive Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: hessflix-linux
          path: build/linux/x64/release/bundle

      - name: Build AppImage
        run: |
          sed -i -E 's/(version:\s*)latest/\1${{needs.fetch-info.outputs.version_name}}/' AppImageBuilder.yml
          wget -O appimage-builder-x86_64.AppImage https://github.com/AppImageCrafters/appimage-builder/releases/download/v1.1.0/appimage-builder-1.1.0-x86_64.AppImage
          chmod +x appimage-builder-x86_64.AppImage
          sudo mv appimage-builder-x86_64.AppImage /usr/local/bin/appimage-builder
          appimage-builder --recipe AppImageBuilder.yml

      - name: Archive Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: hessflix-linux-appimage
          path: |
            Hessflix_x86_64.AppImage
            Hessflix_x86_64.AppImage.zsync

  build-linux-flatpak:
    name: "Flatpak"
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [fetch-info, build-linux]
    container:
      image: bilelmoussaoui/flatpak-github-actions:gnome-46
      options: --privileged
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1
        with:
          submodules: true

      - name: Download Artifacts Linux
        uses: actions/download-artifact@v4
        with:
          name: hessflix-linux
          path: build/linux/x64/release/bundle

      - uses: flatpak/flatpak-github-actions/flatpak-builder@v6
        with:
          bundle: Hessflix-Linux.flatpak
          manifest-path: flatpak/tv.hessflix.client.yaml

      - name: Archive Linux Flatpak bundle
        uses: actions/upload-artifact@v4
        with:
          name: hessflix-linux-flatpak
          path: Hessflix-Linux.flatpak

  build-web:
    runs-on: ubuntu-latest
    needs: [fetch-info]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Set up Flutter
        uses: subosito/flutter-action@v2.16.0
        with:
          channel: "stable"
          flutter-version: ${{needs.fetch-info.outputs.flutter-version}}
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"

      - name: Get dependencies
        run: flutter pub get

      - name: Build web app
        run: |
          flutter build web --release --build-number=${{github.run_number}}

      - name: Archive web artifact
        uses: actions/upload-artifact@v4.0.0
        with:
          name: hessflix-web
          path: build/web

      - name: Build Github pages web
        if: startsWith(github.ref, 'refs/tags/v')
        run: flutter build web --base-href /${{ github.event.repository.name }}/ --release --build-number=$GITHUB_RUN_NUMBER

      - name: Archive web pages artifact
        uses: actions/upload-artifact@v4.0.0
        with:
          name: hessflix-web-pages
          path: build/web

  create_release:
    name: Create Release
    needs:
      - fetch-info
      - build-android
      - build-windows
      - build-ios
      - build-macos
      - build-linux
      - build-linux-flatpak
      - build-web
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download Artifacts Android
        uses: actions/download-artifact@v4
        with:
          name: hessflix-android
          path: hessflix-android

      - name: Move Android
        run: |
          mv hessflix-android/release-signed.apk Hessflix-Android-${{needs.fetch-info.outputs.version_name}}.apk
          mv hessflix-android/release-signed.aab Hessflix-Android-${{needs.fetch-info.outputs.version_name}}.aab

      - name: Download Windows portable artifact
        uses: actions/download-artifact@v4
        with:
          name: hessflix-windows-portable
          path: hessflix-windows-portable

      - name: Compress Windows
        run: |
          cd hessflix-windows-portable
          zip -r ../Hessflix-Windows-${{needs.fetch-info.outputs.version_name}}.zip .

      - name: Download Windows installer artifact
        uses: actions/download-artifact@v4
        with:
          name: hessflix-windows-installer
          path: hessflix-windows-installer

      - name: Rename Windows installer
        run: mv hessflix-windows-installer/hessflix_setup.exe Hessflix-Windows-${{needs.fetch-info.outputs.version_name}}-Setup.exe

      - name: Download Artifacts iOS
        uses: actions/download-artifact@v4
        with:
          name: hessflix-iOS
          path: hessflix-iOS

      - name: Move iOS
        run: mv hessflix-iOS/iOS.ipa Hessflix-iOS-${{needs.fetch-info.outputs.version_name}}.ipa

      - name: Download Artifacts macOS
        uses: actions/download-artifact@v4
        with:
          name: hessflix-macOS
          path: hessflix-macOS

      - name: Move macOS
        run: mv hessflix-macOS/macOS.dmg Hessflix-macOS-${{needs.fetch-info.outputs.version_name}}.dmg

      - name: Download Artifacts Linux
        uses: actions/download-artifact@v4
        with:
          name: hessflix-linux
          path: hessflix-linux

      - name: Compress Linux
        run: |
          cd hessflix-linux
          zip -r ../Hessflix-Linux-${{needs.fetch-info.outputs.version_name}}.zip .

      - name: Download Artifacts Linux Flatpak
        uses: actions/download-artifact@v4
        with:
          name: hessflix-linux-flatpak
          path: hessflix-linux-flatpak

      - name: Move Linux Flatpak
        run: mv hessflix-linux-flatpak/Hessflix-Linux.flatpak Hessflix-Linux-${{needs.fetch-info.outputs.version_name}}.flatpak

      - name: Download Artifacts Linux AppImage
        uses: actions/download-artifact@v4
        with:
          name: hessflix-linux-appimage
          path: hessflix-linux-appimage

      - name: Move linux AppImages
        run: |
          mv hessflix-linux-appimage/Hessflix_x86_64.AppImage Hessflix-Linux-${{needs.fetch-info.outputs.version_name}}.AppImage
          mv hessflix-linux-appimage/Hessflix_x86_64.AppImage.zsync Hessflix-Linux-${{needs.fetch-info.outputs.version_name}}.AppImage.zsync

      - name: Download Artifacts Web
        uses: actions/download-artifact@v4
        with:
          name: hessflix-web
          path: hessflix-web

      - name: Compress Web
        run: |
          cd hessflix-web
          zip -r ../Hessflix-Web-${{needs.fetch-info.outputs.version_name}}.zip .

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          fail_on_unmatched_files: true
          generate_release_notes: true
          files: |
            Hessflix-Android-${{needs.fetch-info.outputs.version_name}}.apk
            Hessflix-Windows-${{needs.fetch-info.outputs.version_name}}-Setup.exe
            Hessflix-Windows-${{needs.fetch-info.outputs.version_name}}.zip
            Hessflix-iOS-${{needs.fetch-info.outputs.version_name}}.ipa
            Hessflix-macOS-${{needs.fetch-info.outputs.version_name}}.dmg
            Hessflix-Web-${{needs.fetch-info.outputs.version_name}}.zip
            Hessflix-Linux-${{needs.fetch-info.outputs.version_name}}.zip
            Hessflix-Linux-${{needs.fetch-info.outputs.version_name}}.flatpak
            Hessflix-Linux-${{needs.fetch-info.outputs.version_name}}.AppImage
            Hessflix-Linux-${{needs.fetch-info.outputs.version_name}}.AppImage.zsync

  release_web:
    name: Release Web
    needs:
      - create_release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Download Artifacts Web
        uses: actions/download-artifact@v4
        with:
          name: hessflix-web
          path: build/web

      - name: Deploy to ghcr.io
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: hessflix
          addLatest: true
          multiPlatform: true
          platform: linux/amd64,linux/arm64,linux/arm/v7
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean builds folder
        run: rm -rf build/web

      - name: Download Artifacts Web
        uses: actions/download-artifact@v4
        with:
          name: hessflix-web-pages
          path: build/web

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/web
